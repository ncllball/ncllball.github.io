const fs = require('fs');
const path = require('path');

const ROOT = process.cwd();
const CSS_IN = path.join(ROOT, 'css.css');
const OUT = path.join(ROOT, 'css.legacy.extracted.css');

const LEGACY_KEYS = ['division-card', 'program-card', 'division-meta', 'division-blurb', 'division-hero__title', 'division-card__graphic', 'division__detail-content'];

if (!fs.existsSync(CSS_IN)) {
  console.error('css.css not found in repo root');
  process.exit(1);
}

const text = fs.readFileSync(CSS_IN, 'utf8');
const parts = text.split('}');

const extracted = [];

parts.forEach(part => {
  const selectorLine = part.split('{')[0] || '';
  for (const key of LEGACY_KEYS) {
    if (selectorLine.includes(key)) {
      extracted.push(part.trim() + '\n}');
      break;
    }
  }
});

if (extracted.length === 0) {
  console.log('No legacy CSS blocks found in css.css');
  process.exit(0);
}

const outHeader = '/* Extracted legacy selector blocks - review, consolidate, and remove from css.css when safe.\n   Generated by scripts/extract-legacy-css.js */\n\n';
fs.writeFileSync(OUT, outHeader + extracted.join('\n\n'));
console.log('Wrote', OUT, 'with', extracted.length, 'blocks. Review and move/merge as desired.');
