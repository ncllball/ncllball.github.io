#!/usr/bin/env node
// MOVED (2025-09-23) from scripts/dedup-scholarship-footies.js
var fs=require('fs');var path=require('path');
var args=process.argv.slice(2);var WRITE=args.indexOf('--write')!==-1;var VERBOSE=args.indexOf('--verbose')!==-1;var PATH_ARG=(function(){for(var i=0;i<args.length;i++){if(args[i].indexOf('--path=')===0){return args[i].slice(7);}}return'';})();
var ROOT=path.resolve(process.cwd(),PATH_ARG||'.');
var SCHOLAR_MARKER='NCLL believes that no one should be denied the ability to play ball due to economic circumstances';
var FOOTIES_BLOCK_RE=/<section\s+class="footies"[\s\S]*?<\/section>/g;
function isHtmlFile(fp){return /\.html?$/i.test(fp);} function walk(dir,acc){acc=acc||[];var list;try{list=fs.readdirSync(dir);}catch(e){if(VERBOSE)console.error('Failed read dir',dir);return acc;} for(var i=0;i<list.length;i++){var name=list[i];var fp=path.join(dir,name);var st;try{st=fs.statSync(fp);}catch(e2){continue;} if(st.isDirectory()){ if(name==='node_modules'||name==='.git'||name==='.github') continue; walk(fp,acc);} else if(st.isFile()&&isHtmlFile(fp)){acc.push(fp);} } return acc; }
function dedup(html){var blocks=[];var m;FOOTIES_BLOCK_RE.lastIndex=0;while((m=FOOTIES_BLOCK_RE.exec(html))!==null){blocks.push({index:m.index,text:m[0]});} if(!blocks.length)return{updated:false,html:html,removedCount:0}; var schol=[];for(var i=0;i<blocks.length;i++){if(blocks[i].text.indexOf(SCHOLAR_MARKER)!==-1) schol.push(blocks[i]);} if(schol.length<=1) return {updated:false,html:html,removedCount:0}; schol.sort(function(a,b){return a.index-b.index;}); var toRemove=schol.slice(1); toRemove.sort(function(a,b){return b.index-a.index;}); var updated=html; for(var j=0;j<toRemove.length;j++){var block=toRemove[j];var start=updated.indexOf(block.text,block.index-50); if(start===-1) start=updated.indexOf(block.text); if(start!==-1){var end=start+block.text.length; updated=updated.slice(0,start)+''+updated.slice(end);} } return {updated:updated!==html,html:updated,removedCount:toRemove.length}; }
var changed=[]; var files=walk(ROOT,[]); for(var f=0;f<files.length;f++){var fp=files[f]; var src;try{src=fs.readFileSync(fp,'utf8');}catch(e){continue;} var res=dedup(src); if(res.updated){changed.push(fp); if(WRITE){try{fs.writeFileSync(fp,res.html,'utf8');}catch(e2){console.error('Write fail',fp);}} if(VERBOSE) console.log('De-duplicated scholarship footnote(s):',fp,'(removed',res.removedCount,')');}}
console.log((WRITE?'Applied':'Would apply')+' scholarship footnote de-duplication in '+changed.length+' file(s).'); if(!WRITE) console.log('Run with --write to apply changes.');
process.exit(0);
